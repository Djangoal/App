name: Build Kivy Android App with Debug SDK Setup

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      PATH: ${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ env.PATH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget openjdk-11-jdk python3-pip

      - name: Download and install Android SDK cmdline-tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O tools.zip
          unzip tools.zip
          mkdir -p latest
          mv cmdline-tools/* latest/
          rm -rf cmdline-tools tools.zip

      - name: Accept Android SDK licenses manually
        run: |
          mkdir -p $ANDROID_SDK_ROOT/licenses
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_SDK_ROOT/licenses/android-sdk-license

      - name: Update sdkmanager and install required packages
        run: |
          sdkmanager --update
          sdkmanager --install "platform-tools" "platforms;android-31" "build-tools;36.0.0"

      - name: Verify aidl presence and version
        run: |
          if [ -f "$ANDROID_SDK_ROOT/build-tools/36.0.0/aidl" ]; then
            echo "Aidl found:"
            $ANDROID_SDK_ROOT/build-tools/36.0.0/aidl --version
          else
            echo "Aidl NOT found!"
            exit 1
          fi

      - name: Install Python dependencies and Buildozer
        run: |
          pip install --upgrade pip
          pip install Cython virtualenv buildozer

      - name: Run Buildozer to build APK
        run: |
          buildozer android debug
