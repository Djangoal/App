name: Build APK

on:
  push:
    tags:
      - 'v*'  # Lancement lors d'un tag v1.0, v2.3, etc.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y zip unzip openjdk-17-jdk python3-pip git libffi-dev libssl-dev
        pip install --upgrade pip
        pip install buildozer cython

    - name: Install Android SDK
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip -q sdk.zip
        rm sdk.zip
        mv cmdline-tools latest

        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk \
          "platform-tools" \
          "platforms;android-34" \
          "build-tools;34.0.0" \
          "cmdline-tools;latest"

    - name: Set environment variables
      run: |
        echo "ANDROIDSDK=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/platform-tools:$HOME/android-sdk/emulator:$PATH" >> $GITHUB_ENV

    - name: Build APK with Buildozer
      run: |
        buildozer android debug

    - name: Upload APK to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
